diff -pruN tachyon-0.6.0-orig/bin/tachyon tachyon-0.6.0-new/bin/tachyon
--- tachyon-0.6.0-orig/bin/tachyon	2015-02-11 17:52:30.000000000 -0800
+++ tachyon-0.6.0-new/bin/tachyon	2015-03-05 16:36:20.718221000 -0800
@@ -28,6 +28,22 @@ if [ "$#" == 0 ]; then
   exit 1
 fi
 
+if [ "$1" == "--config" ]
+then
+  shift
+  conf_dir=$1
+  if [ ! -d "$conf_dir" ]
+  then
+    echo "ERROR : $conf_dir is not a directory"
+    echo $usage
+    exit 1
+  else
+    export TACHYON_CONF_DIR=$conf_dir
+  fi
+  shift
+fi
+
+
 COMMAND=$1
 shift
 
@@ -90,7 +106,7 @@ function killAll {
 
   keyword=$1
   count=0
-  for pid in `ps -A -o pid,command | grep -i "[j]ava" | grep $keyword | awk '{print $1}'`; do
+  for pid in `ps -Aww -o pid,command | grep -i "[j]ava" | grep $keyword | awk '{print $1}'`; do
     kill -15 "$pid" > /dev/null 2>&1
     local cnt=30
     while kill -0 "$pid" > /dev/null 2>&1; do
@@ -106,7 +122,7 @@ function killAll {
     done
     count=`expr $count + 1`
   done
-  echo "Killed $count processes"
+  echo "Killed $count processes on `hostname`"
 }
 
 function copyDir {
@@ -182,7 +198,12 @@ if [ "$COMMAND" == "format" ]; then
     TACHYON_MASTER_ADDRESS=localhost
   fi
 
-  $LAUNCHER $bin/tachyon-workers.sh $bin/tachyon formatWorker
+  if [ "${TACHYON_CONF_DIR}X" != "X" ]
+  then
+    $LAUNCHER $bin/tachyon-workers.sh $bin/tachyon --config "${TACHYON_CONF_DIR}" formatWorker
+  else 
+    $LAUNCHER $bin/tachyon-workers.sh $bin/tachyon formatWorker
+  fi
 
   echo "Formatting Tachyon Master @ $TACHYON_MASTER_ADDRESS"
   CLASS=tachyon.Format
diff -pruN tachyon-0.6.0-orig/bin/tachyon-start.sh tachyon-0.6.0-new/bin/tachyon-start.sh
--- tachyon-0.6.0-orig/bin/tachyon-start.sh	2015-02-11 17:52:30.000000000 -0800
+++ tachyon-0.6.0-new/bin/tachyon-start.sh	2015-03-05 16:36:20.721218000 -0800
@@ -8,7 +8,7 @@ fi
 
 #start up tachyon
 
-Usage="Usage: tachyon-start.sh [-h] WHAT [MOPT] [-f]
+Usage="Usage: tachyon-start.sh [-hN] WHAT [MOPT] [-f]
 Where WHAT is one of:
   all MOPT\t\tStart master and all workers.
   local\t\t\tStart a master and worker locally
@@ -26,8 +26,28 @@ MOPT is one of:
 
 -f  format Journal, UnderFS Data and Workers Folder on master
 
+-N  Do not try to kill prior running masters and/or workers in all or local
+
 -h  display this help."
 
+# Check if --config is passed as an argument. It is an optional parameter.
+# Exit if the argument is not a directory.
+
+if [ "$1" == "--config" ]
+then
+  shift
+  conf_dir=$1
+  if [ ! -d "$conf_dir" ]
+  then
+    echo "ERROR : $conf_dir is not a directory"
+    echo $usage
+    exit 1
+  else
+    export TACHYON_CONF_DIR=$conf_dir
+  fi
+  shift
+fi
+
 bin=`cd "$( dirname "$0" )"; pwd`
 
 ensure_dirs() {
@@ -81,7 +101,12 @@ do_mount() {
 }
 
 stop() {
-  $bin/tachyon-stop.sh
+  if [ "${TACHYON_CONF_DIR}X" != "X" ]
+  then
+    $bin/tachyon-stop.sh --config "${TACHYON_CONF_DIR}"
+  else
+    $bin/tachyon-stop.sh
+  fi
 }
 
 
@@ -143,12 +168,15 @@ run_safe() {
   done
 }
 
-while getopts "h" o; do
+while getopts "hN" o; do
   case "${o}" in
     h)
       echo -e "$Usage"
       exit 0
       ;;
+    N)
+      killonstart="no"
+      ;;
     *)
       echo -e "$Usage"
       exit 1
@@ -175,14 +203,23 @@ ensure_dirs
 case "${WHAT}" in
   all)
     check_mount_mode $2
-    stop $bin
+    if [ "${killonstart}" != "no" ]; then
+      stop $bin
+    fi
     start_master $3
     sleep 2
-    $LAUNCHER $bin/tachyon-workers.sh $bin/tachyon-start.sh worker $2
+    if [ "${TACHYON_CONF_DIR}X" != "X" ]
+    then
+      $LAUNCHER $bin/tachyon-workers.sh $bin/tachyon-start.sh --config "${TACHYON_CONF_DIR}" worker $2
+    else
+      $LAUNCHER $bin/tachyon-workers.sh $bin/tachyon-start.sh worker $2
+    fi
     ;;
   local)
-    stop $bin
-    sleep 1
+    if [ "${killonstart}" != "no" ]; then
+      stop $bin
+      sleep 1
+    fi
     $LAUNCHER $bin/tachyon-mount.sh SudoMount
     stat=$?
     if [ $stat -ne 0 ] ; then
@@ -205,13 +242,23 @@ case "${WHAT}" in
     ;;
   workers)
     check_mount_mode $2
-    $LAUNCHER $bin/tachyon-workers.sh $bin/tachyon-start.sh worker $2 $TACHYON_MASTER_ADDRESS
+    if [ "${TACHYON_CONF_DIR}X" != "X" ]
+    then
+      $LAUNCHER $bin/tachyon-workers.sh $bin/tachyon-start.sh --config "${TACHYON_CONF_DIR}" worker $2 $TACHYON_MASTER_ADDRESS
+    else
+      $LAUNCHER $bin/tachyon-workers.sh $bin/tachyon-start.sh worker $2 $TACHYON_MASTER_ADDRESS
+    fi
     ;;
   restart_worker)
     restart_worker
     ;;
   restart_workers)
-    $LAUNCHER $bin/tachyon-workers.sh $bin/tachyon-start.sh restart_worker
+    if [ "${TACHYON_CONF_DIR}X" != "X" ]
+    then
+      $LAUNCHER $bin/tachyon-workers.sh $bin/tachyon-start.sh --config "${TACHYON_CONF_DIR}" restart_worker
+    else
+      $LAUNCHER $bin/tachyon-workers.sh $bin/tachyon-start.sh restart_worker
+    fi
     ;;
   *)
     echo "Error: Invalid WHAT: $WHAT"
diff -pruN tachyon-0.6.0-orig/bin/tachyon-stop.sh tachyon-0.6.0-new/bin/tachyon-stop.sh
--- tachyon-0.6.0-orig/bin/tachyon-stop.sh	2015-02-11 17:52:30.000000000 -0800
+++ tachyon-0.6.0-new/bin/tachyon-stop.sh	2015-03-05 16:36:20.724215000 -0800
@@ -16,6 +16,21 @@ Where component is one of:
 -h  display this help."
 bin=`cd "$( dirname "$0" )"; pwd`
 
+if [ "$1" == "--config" ]
+then
+  shift
+  conf_dir=$1
+  if [ ! -d "$conf_dir" ]
+  then
+    echo "ERROR : $conf_dir is not a directory"
+    echo $usage
+    exit 1
+  else
+    export TACHYON_CONF_DIR=$conf_dir
+  fi
+  shift
+fi
+
 kill_master() {
   $LAUNCHER $bin/tachyon killAll tachyon.master.TachyonMaster
 }
@@ -25,7 +40,12 @@ kill_worker() {
 }
 
 kill_remote_workers() {
-  $LAUNCHER $bin/tachyon-workers.sh $bin/tachyon killAll tachyon.worker.TachyonWorker
+  if [ "${TACHYON_CONF_DIR}X" != "X" ]
+  then
+    $LAUNCHER $bin/tachyon-workers.sh $bin/tachyon --config "${TACHYON_CONF_DIR}" killAll tachyon.worker.TachyonWorker
+  else
+    $LAUNCHER $bin/tachyon-workers.sh $bin/tachyon killAll tachyon.worker.TachyonWorker
+  fi
 }
 
 WHAT=${1:-all}
diff -pruN tachyon-0.6.0-orig/bin/tachyon-workers.sh tachyon-0.6.0-new/bin/tachyon-workers.sh
--- tachyon-0.6.0-orig/bin/tachyon-workers.sh	2015-02-11 17:52:30.000000000 -0800
+++ tachyon-0.6.0-new/bin/tachyon-workers.sh	2015-03-05 16:36:20.726216000 -0800
@@ -21,10 +21,22 @@ TACHYON_LIBEXEC_DIR=${TACHYON_LIBEXEC_DI
 
 HOSTLIST=$TACHYON_CONF_DIR/workers
 
+RSH_CMD=${TACHYON_SSH_CMD:-ssh}
+if [ "${RSH_CMD}" == "ssh" ] && [ "${TACHYON_SSH_OPTS}X" == "X" ]
+then
+  RSH_SSH_OPTS="-o ConnectTimeout=5 -o StrictHostKeyChecking=no -t"
+fi
+
 for worker in `cat "$HOSTLIST"|sed  "s/#.*$//;/^$/d"`; do
-  echo -n "Connection to $worker as $USER... "
-  ssh -o ConnectTimeout=5 -o StrictHostKeyChecking=no -t $worker $LAUNCHER $"${@// /\\ }" 2>&1
-  sleep 0.02
+  if [ -n "${TACHYON_SSH_FOREGROUND}" ]; then
+    echo -n "Connection to $worker as $USER... "
+    $RSH_CMD $RSH_SSH_OPTS $worker $LAUNCHER $"${@// /\\ }" 2>&1
+  else
+    $RSH_CMD $RSH_SSH_OPTS $worker $LAUNCHER $"${@// /\\ }" 2>&1 &
+  fi
+  if [ "$TACHYON_WORKER_SLEEP" != "" ]; then
+    sleep $TACHYON_WORKER_SLEEP
+  fi
 done
 
 wait
diff -pruN tachyon-0.6.0-orig/libexec/tachyon-config.sh tachyon-0.6.0-new/libexec/tachyon-config.sh
--- tachyon-0.6.0-orig/libexec/tachyon-config.sh	2015-02-11 17:52:30.000000000 -0800
+++ tachyon-0.6.0-new/libexec/tachyon-config.sh	2015-03-05 20:30:54.746909000 -0800
@@ -34,4 +34,5 @@ if [ -e $TACHYON_CONF_DIR/tachyon-env.sh
   . $TACHYON_CONF_DIR/tachyon-env.sh
 fi
 
-export CLASSPATH="$TACHYON_CONF_DIR/:$TACHYON_CLASSPATH:$TACHYON_JAR"
+export CLASSPATH="$TACHYON_CONF_DIR/:$TACHYON_JAR:$TACHYON_CLASSPATH"
+
diff -pruN tachyon-0.6.0-orig/libexec/tachyon-layout.sh tachyon-0.6.0-new/libexec/tachyon-layout.sh
--- tachyon-0.6.0-orig/libexec/tachyon-layout.sh	1969-12-31 16:00:00.000000000 -0800
+++ tachyon-0.6.0-new/libexec/tachyon-layout.sh	2015-03-05 16:51:58.702302000 -0800
@@ -0,0 +1,16 @@
+#!/usr/bin/env bash
+
+export TACHYON_SYSTEM_INSTALLATION="TRUE"
+
+# We require Magpie to set this
+if [ "${TACHYON_CONF_DIR}X" == "X" ]
+then
+  echo "Error: TACHYON_CONF_DIR not set"
+  exit 1
+fi
+
+. $TACHYON_CONF_DIR/tachyon-env.sh
+
+export TACHYON_JAR=${TACHYON_HOME}/core/target/tachyon-0.6.0-jar-with-dependencies.jar
+
+export TACHYON_DATA_DIR="${TACHYON_LOCAL_DIR}/run/"
